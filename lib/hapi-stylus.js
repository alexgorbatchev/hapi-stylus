// Generated by CoffeeScript 1.9.2
var Boom, fs, path, register, stylus;

stylus = require('stylus');

fs = require('fs');

path = require('path');

Boom = require('boom');

register = function(plugin, arg, next) {
  var cache, compress, extension, handler, home, linenos, prefix, route, use;
  route = arg.route, home = arg.home, compress = arg.compress, cache = arg.cache, extension = arg.extension, linenos = arg.linenos, prefix = arg.prefix, use = arg.use;
  handler = function(request, reply) {
    var filename, filepath, stylusName;
    filename = request.params.filename;
    filename = path.normalize(filename);
    if (filename.charAt(0) === '.') {
      return reply(Boom.notFound());
    }
    stylusName = filename.replace(/\.css$/, extension || '.styl');
    filepath = home + "/" + stylusName;
    return fs.readFile(filepath, 'utf8', function(err, content) {
      var func, i, len, style;
      if (err != null) {
        return reply(err.code && Boom.notFound() || Boom.badImplementation(err));
      }
      style = stylus(content, {
        filename: filepath,
        dest: home + "/" + filename,
        prefix: prefix || '',
        compress: compress != null ? compress : true,
        cache: cache != null ? cache : true,
        linenos: linenos != null ? linenos : false
      });
      if (Array.isArray(use)) {
        for (i = 0, len = use.length; i < len; i++) {
          func = use[i];
          if (typeof func === 'function') {
            style.use(func());
          }
        }
      }
      return style.render(function(err, css) {
        if (err != null) {
          return reply(Boom.badImplementation(err));
        }
        return reply(css).type('text/css');
      });
    });
  };
  plugin.route([
    {
      method: 'GET',
      path: route || '/styles/{filename*}',
      handler: handler
    }
  ]);
  return next();
};

register.attributes = {
  multiple: true,
  pkg: require('../package.json')
};

module.exports = {
  register: register
};
